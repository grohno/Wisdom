/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2021-02-23 14:09:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.User;
import util.Constant;

public final class gate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.User");
    _jspx_imports_classes.add("util.Constant");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<title>Wisdom - Q＆A Communication</title>\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=2.0,user-scalable=yes\">\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<link href=\"./jsp/wisdom.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t\t<script src=\"https://code.jquery.com/jquery-2.2.4.js\"></script>\r\n");
      out.write("\t\t<script src=\"./jsp/js/script.js\"></script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body id=\"gate\">\r\n");
      out.write("\t<div id=\"loading\"></div>\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t\t<p class=\"img logo\"><a href=\"");
      out.print(Constant.PATH_SESSION_CNTL);
      out.write("\"><img src=\"./jsp/images/wisdom_icon.png\" alt=\"Wisdom - Q＆A Communication\"></a></p>\r\n");
      out.write("\t\t\t\t<h1><a href=\"");
      out.print(Constant.PATH_SESSION_CNTL);
      out.write("\">Wisdom - Q＆A Communication</a></h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<article>\r\n");
      out.write("\t\t\t<div class=\"upper flex column2\">\r\n");
      out.write("\t\t\t\t<div class=\"left item imgblock\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"right item textblock\">\r\n");
      out.write("\t\t\t\t\t<div class=\"innerbox\">\r\n");
      out.write("\t\t\t\t\t\t<h2><span class=\"oswald\">Wisdom</span> へようこそ！</h2>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"oswald\">Wisdom</span> は、日常のちょっとした疑問から専門的な質問まで、<br class=\"mini\">\r\n");
      out.write("\t\t\t\t\t\t\t気軽に幅広く質問・回答ができる、<br class=\"mini\">\r\n");
      out.write("\t\t\t\t\t\t\tナレッジコミュニケーションサービスです。<br>\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\tあなたも、<span class=\"oswald\">Wisdom</span> で分からないことを尋ねてみたり、<br class=\"mini\">\r\n");
      out.write("\t\t\t\t\t\t\t誰かの疑問を解決したりしてみませんか？\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"rootBtn\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(Constant.PATH_SESSION_CNTL);
      out.write('?');
      out.print(Constant.PARAM_ACTION);
      out.write('=');
      out.print(Constant.ACTION_LOGIN);
      out.write("\" class=\"login\">ログイン</a>\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(Constant.PATH_USER_CNTL);
      out.write("\" class=\"newUser\">新規登録はこちら</a>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div><!-- .upper end  -->\r\n");
      out.write("\t\t\t<div class=\"lower flex column2\">\r\n");
      out.write("\t\t\t\t<div class=\"left item textblock\">\r\n");
      out.write("\t\t\t\t\t<div class=\"innerbox\">\r\n");
      out.write("\t\t\t\t\t\t<h2>みんなの質問・回答を見てみよう！</h2>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"oswald\">Wisdom</span> では、日々いろんなユーザーが<br class=\"mini\">\r\n");
      out.write("\t\t\t\t\t\t\t活発に質問・回答を投稿しています。<br>\r\n");
      out.write("\t\t\t\t\t\t\t質問・回答は、こちらのボタンから、どなたでもご覧いただけます！<br>\r\n");
      out.write("\t\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t\tぜひあなたも、<br class=\"mini\"><span class=\"oswald\">Wisdom</span> のナレッジコミュニケーションを体感してください。\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<p class=\"rootBtn\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.print(Constant.PATH_SESSION_CNTL);
      out.write('?');
      out.print(Constant.PARAM_ACTION);
      out.write('=');
      out.print(Constant.ACTION_VISITOR);
      out.write("\" class=\"visitor\">\r\n");
      out.write("\t\t\t\t\t\t\t\tログインせずに質問を見る\r\n");
      out.write("\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"right item imgblock\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div><!-- .lower end  -->\r\n");
      out.write("\t\t</article>\r\n");
      out.write("\t\t<footer>\r\n");
      out.write("\t\t\t<p class=\"copyright\">\r\n");
      out.write("\t\t\t\t<small>\r\n");
      out.write("\t\t\t\t\tCopyright <script type=\"text/javascript\"> document.write(new Date().getFullYear()); </script> ZENET Co., Ltd. All Rights Reserved.\r\n");
      out.write("\t\t\t\t</small>\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</footer>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
